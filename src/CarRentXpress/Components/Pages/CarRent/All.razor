@page "/rented/cars"
@using CarRentXpress.Application.Entities
@using CarRentXpress.Application.Services
@using CarRentXpress.Application.Services.Interfaces
@using CarRentXpress.Components.Dialog
@using CarRentXpress.Core.Repositories
@using CarRentXpress.DTOs
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager
@inject ICarRentService CarRentService
@inject IDialogService DialogService

<MudStack Spacing="2">
    @foreach (var car in cars)
    {
        <MudCard Class="d-flex align-items-center p-2 justify-between">
            <!-- Left side (image + text) -->
            <div class="d-flex gap-4 align-items-center flex-grow-1">
                <MudImage Src="@car.Car.ImgUrl" Elevation="25" Width="240" Height="160" Class="rounded-lg"></MudImage>

                <MudCardContent>
                    <MudText Typo="Typo.h6">@car.Car.Brand @car.Car.Model</MudText>

                    <!-- Year and Seats text aligned normally -->
                    <MudText Typo="Typo.body2">Year: @car.Car.Year</MudText>
                    <MudText Typo="Typo.body2">Seats: @car.Car.Seats</MudText>

                    <!-- Price per day text aligned normally -->
                    <MudText Typo="Typo.body2">Price per day: €@car.Car.PricePerDay</MudText>
                </MudCardContent>
            </div>
            
            <!-- Rent button aligned to the right of the text and with a fixed width -->
            <div class="d-flex flex-column gap-1">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Medium" OnClick="@(() => NavigationManager.NavigateTo($"/cars/rent/{car.Id}"))" Style="width: 9.8%; margin-bottom: 0.3%; margin-top: 0.3%">
                    Rent
                </MudButton>
            </div>
            
            <div class="d-flex gap-2">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" OnClick="@(() => NavigationManager.NavigateTo($"/cars/details/{car.Id}"))">
                    Details
                </MudButton>
            </div>
        </MudCard>
    }
</MudStack>

@code {
    private List<CarRentDto> cars = new();

    protected override async Task OnInitializedAsync()
    {
        cars = await CarRentService.GetAllCarRentsAsync();
    }

    private void RentCar(CarDto car)
    {
        Console.WriteLine($"Renting car: {car.Brand} {car.Model}");
    }
}
